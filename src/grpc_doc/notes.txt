pathfinder-dependecies:-
    consul@^0.40.0
    @grpc/grpc-js@^1.5.3
    grpc-promise@^1.4.0
    grpc-inspect@^0.6.0
    node-zookeeper-client@^1.1.1


1. authenticate - rpc authenticate(AuthenticationRequest) returns(AuthenticationResponse); from AuthService.proto
2. getConfigs -> rpc getLobbyById (GetLobbyRequest) returns (GetLobbyDetailsResponse); from LobbyService.proto
3. setGameData -> we usually use submit score and finish battle, not sure if we have any rpc which does both.
    submit score ->  rpc updateBattleScore (UpdateBattleScoreRequest) returns (UpdateBattleScoreResponse); LobbyService.proto
    finish battle -> rpc finishBattle (GetBattleRequest) returns (GetBattleResponse); LobbyService.proto
4. for pathfinder integration better take help from existing nodejs devs.



------------------------
message AuthServiceError {
    enum Reason {
        NONE                       = 0;
        UNKNOWN                    = 1;
        BAD_REQUEST                = 2;
        INTERNAL_ERROR             = 3;
        INVALID_USER_ID            = 4;
    }
    Reason reason  = 1;
    string message = 2;
}
message LobbyServiceError {
    enum Reason {
        NONE = 0;
        UNKNOWN = 1;
        BAD_REQUEST = 2;
        INTERNAL_ERROR = 3;
        EXTERNAL_ERROR = 4;
        INSUFFICIENT_FUNDS = 5;
        LOBBY_ENDED = 6;
        VIOLATED_THE_FRAUD_RULES =7;
        UNAUTHORIZED = 8;
        GAME_WISE_USER_BLOCKED = 9;
        DUPLICATE = 10;
        APP_LEVEL_USER_BLOCKED = 11;
        MIN_VERSION_UPDATE = 12;
        COLLUSION_DETECTED = 13;
        FORMAT_NOT_SUPPORTED =14;
        KO_DEVICE_ID_CHECK = 15;
        SEGMENT_BLOCKED_USER = 16;
        USER_EXITED_RUMMY_TOURNAMENT = 17;
        KO_GAMEPLAY_ERROR = 18;
    }
    Reason reason = 1;
    string message = 2;
    repeated int32 segmentBlockedUsers = 3;
}
message LobbyPlayerData {
    string battleId = 1;
    int32 userId = 2;
    int32 score = 3;
    string scoreData = 4;
    string status = 5;
    bool matched = 6;
    int32 rank = 7;
    int32 cashWinnings = 8;
    int32 tokenWinnings = 9;
    bool canPlayAgain = 10;
    bool followingOpponent = 11;
    double cashWinningsDecimal = 12;
    string nextLobbySuggestedConfig = 13;
    LobbyDetails nextSuggestedLobby = 14;
    double decimalScore = 15;
    string extraInfo = 16;
    int32 entryFee =17;
    string entryCurrency =18;
    string rewards = 19;
    bool isTicketUsed = 20;
    double ticketContribution = 21;
    string moneyEntryFee= 22;
    com.mpl.commons.lci.CountryInfo countryInfo = 23;
    bool hasBalance = 24;
    bool segmentedUser = 25;
    bool userBlocked = 26;
}
------------------------
// 1
message AuthenticationRequest {
    string requestId = 1; // ?
    string authToken = 2; // recieved form unity
}
message AuthenticationResponse {
    AuthServiceError error = 1;
    bool isAuthentic       = 2;
    uint32 userId          = 3;
    string mobileNumber    = 4;
    string countryCode     = 5;
}

// 2
message GetLobbyRequest {
    string requestId = 1; // ?
    int32 id = 2;     // unknown, where to get this ?
    int32 userId = 3; // recieved from AuthenticationResponse
}
message GetLobbyDetailsResponse {
    string requestId = 1;
    LobbyServiceError error = 2;
    LobbyDetails lobbyDetails = 3;
}

// 3
// submit score
message UpdateBattleScoreRequest {
    string requestId = 1; // ?
    string battleId = 2;
    int32 userId = 3;
    int32 score = 4;
    string scoreData = 5; // what value is expected here ?
    bool isFirstScore = 6; // will it be always true, as we only send the score once the will finish ?
    string partnerKey = 7; // what value is expected here ?
    double decimalScore = 8; // what value is expected here ?
    bool forceSubmit = 9; // should it always be true ?
    string stateChangelog = 10; // what value is expected here ?
}
message UpdateBattleScoreResponse {
    string requestId = 1;
    LobbyServiceError error = 2;
    bool success = 3;
    bool matched = 4;
    bool resultsDeclared = 5;
    bool winner = 6;
    int32 amount = 7;
    string currencyType = 8;
    int32 rank = 9;
    LobbyPlayerData playerData = 10;
    PlayerType playerType = 11; // ! not defined in proto file   LobbyService.proto
    string moneyAmount = 12;
    com.mpl.commons.lci.CountryInfo countryInfo = 13;
    bool allScoredSubmitted = 14;
}
// submit game
message GetBattleRequest {
    string requestId = 1;
    string battleId = 2;
    bool isOldBattle = 3; // what value is expected here ?
    bool useWriter = 4; // what value is expected here ?
}
message GetBattleResponse {
    string requestId = 1;
    LobbyServiceError error = 2;
    repeated LobbyPlayerData playersData = 3;
    string battleStatus = 4;
    bool battlePlayAgainDisabled = 5 ;
    RummyInfo rummyInfo = 6;
}